#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Review
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Review")]
	public partial class TacPhamDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPhim(Phim instance);
    partial void UpdatePhim(Phim instance);
    partial void DeletePhim(Phim instance);
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertReview(Review instance);
    partial void UpdateReview(Review instance);
    partial void DeleteReview(Review instance);
    #endregion
		
		public TacPhamDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ReviewConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TacPhamDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TacPhamDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TacPhamDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TacPhamDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Phim> Phims
		{
			get
			{
				return this.GetTable<Phim>();
			}
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<Review> Reviews
		{
			get
			{
				return this.GetTable<Review>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phim")]
	public partial class Phim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenPhim;
		
		private string _DaoDien;
		
		private System.Nullable<System.DateTime> _NgayCC;
		
		private string _TheLoai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenPhimChanging(string value);
    partial void OnTenPhimChanged();
    partial void OnDaoDienChanging(string value);
    partial void OnDaoDienChanged();
    partial void OnNgayCCChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCCChanged();
    partial void OnTheLoaiChanging(string value);
    partial void OnTheLoaiChanged();
    #endregion
		
		public Phim()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhim", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenPhim
		{
			get
			{
				return this._TenPhim;
			}
			set
			{
				if ((this._TenPhim != value))
				{
					this.OnTenPhimChanging(value);
					this.SendPropertyChanging();
					this._TenPhim = value;
					this.SendPropertyChanged("TenPhim");
					this.OnTenPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaoDien", DbType="NVarChar(50)")]
		public string DaoDien
		{
			get
			{
				return this._DaoDien;
			}
			set
			{
				if ((this._DaoDien != value))
				{
					this.OnDaoDienChanging(value);
					this.SendPropertyChanging();
					this._DaoDien = value;
					this.SendPropertyChanged("DaoDien");
					this.OnDaoDienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCC", DbType="Date")]
		public System.Nullable<System.DateTime> NgayCC
		{
			get
			{
				return this._NgayCC;
			}
			set
			{
				if ((this._NgayCC != value))
				{
					this.OnNgayCCChanging(value);
					this.SendPropertyChanging();
					this._NgayCC = value;
					this.SendPropertyChanged("NgayCC");
					this.OnNgayCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheLoai", DbType="NVarChar(50)")]
		public string TheLoai
		{
			get
			{
				return this._TheLoai;
			}
			set
			{
				if ((this._TheLoai != value))
				{
					this.OnTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._TheLoai = value;
					this.SendPropertyChanged("TheLoai");
					this.OnTheLoaiChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _username;
		
		private string _password;
		
		private string _chucvu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnchucvuChanging(string value);
    partial void OnchucvuChanged();
    #endregion
		
		public Account()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chucvu", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string chucvu
		{
			get
			{
				return this._chucvu;
			}
			set
			{
				if ((this._chucvu != value))
				{
					this.OnchucvuChanging(value);
					this.SendPropertyChanging();
					this._chucvu = value;
					this.SendPropertyChanged("chucvu");
					this.OnchucvuChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Review")]
	public partial class Review : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Header;
		
		private string _Body1;
		
		private string _Footer;
		
		private int _IDTP;
		
		private int _State;
		
		private int _star;
		
		private System.Nullable<int> _IDNV;
		
		private System.Nullable<System.DateTime> _NgayViet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnHeaderChanging(string value);
    partial void OnHeaderChanged();
    partial void OnBody1Changing(string value);
    partial void OnBody1Changed();
    partial void OnFooterChanging(string value);
    partial void OnFooterChanged();
    partial void OnIDTPChanging(int value);
    partial void OnIDTPChanged();
    partial void OnStateChanging(int value);
    partial void OnStateChanged();
    partial void OnstarChanging(int value);
    partial void OnstarChanged();
    partial void OnIDNVChanging(System.Nullable<int> value);
    partial void OnIDNVChanged();
    partial void OnNgayVietChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayVietChanged();
    #endregion
		
		public Review()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Header", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Header
		{
			get
			{
				return this._Header;
			}
			set
			{
				if ((this._Header != value))
				{
					this.OnHeaderChanging(value);
					this.SendPropertyChanging();
					this._Header = value;
					this.SendPropertyChanged("Header");
					this.OnHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body1", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Body1
		{
			get
			{
				return this._Body1;
			}
			set
			{
				if ((this._Body1 != value))
				{
					this.OnBody1Changing(value);
					this.SendPropertyChanging();
					this._Body1 = value;
					this.SendPropertyChanged("Body1");
					this.OnBody1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Footer", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Footer
		{
			get
			{
				return this._Footer;
			}
			set
			{
				if ((this._Footer != value))
				{
					this.OnFooterChanging(value);
					this.SendPropertyChanging();
					this._Footer = value;
					this.SendPropertyChanged("Footer");
					this.OnFooterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTP", DbType="Int NOT NULL")]
		public int IDTP
		{
			get
			{
				return this._IDTP;
			}
			set
			{
				if ((this._IDTP != value))
				{
					this.OnIDTPChanging(value);
					this.SendPropertyChanging();
					this._IDTP = value;
					this.SendPropertyChanged("IDTP");
					this.OnIDTPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int NOT NULL")]
		public int State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_star", DbType="Int NOT NULL")]
		public int star
		{
			get
			{
				return this._star;
			}
			set
			{
				if ((this._star != value))
				{
					this.OnstarChanging(value);
					this.SendPropertyChanging();
					this._star = value;
					this.SendPropertyChanged("star");
					this.OnstarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNV", DbType="Int")]
		public System.Nullable<int> IDNV
		{
			get
			{
				return this._IDNV;
			}
			set
			{
				if ((this._IDNV != value))
				{
					this.OnIDNVChanging(value);
					this.SendPropertyChanging();
					this._IDNV = value;
					this.SendPropertyChanged("IDNV");
					this.OnIDNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayViet", DbType="Date")]
		public System.Nullable<System.DateTime> NgayViet
		{
			get
			{
				return this._NgayViet;
			}
			set
			{
				if ((this._NgayViet != value))
				{
					this.OnNgayVietChanging(value);
					this.SendPropertyChanging();
					this._NgayViet = value;
					this.SendPropertyChanged("NgayViet");
					this.OnNgayVietChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
